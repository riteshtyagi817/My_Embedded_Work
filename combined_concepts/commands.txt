to save desired stages
-E - preprocessing
-S - Assembler
-c - Object code
for GCC optimization
-O0 
-O1
-O2
-O3
-Os
ldd test
readelf -a test
arm-linux-gnueabihf-gcc -g -o test test.c
readelf -a test
ps aux
cd /proc/6816/
sudo cat maps
readelf -a test1
gcc -S -o test2.s test2.c
g++ -S -o test2.s test2.c
c++filt _Z8getValuev
g++ -S -o test3.s test3.c
g++ -S -o test4.s test4.c
g++ -v -S -o test4.s test4.c
g++ -v -o test4 test4.c
gcc -save-temps -o test2 test2.c
cd /lib/x86_64-linux-gnu/ldscripts/
objdump -DS test > test.obj
gcc -static -o test test.c -Wl,--verbose
ld --verbose
gcc -O0 -S -o test.s test.c
gcc -O2 -Q --help=optimizers
gcc -O1 -S -o demo.s demo.c
docker pull swidzinski/cmake:examples
docker run -it swidzinski/cmake:examples
cat /proc/meminfo
free -mt
cat /proc/swaps
sudo swapoff -a
sudo swapon -a
dmesg
cd /lib/x86_64-linux-gnu/ldscripts/
find -name "*.a"
find -name "*.so"
find -name libc.a
find -name libc.so
gcc -g -o test test.c -ltest -L/home/ritesht/lib/
gcc -static -g -o test test.c -ltest -L/home/ritesht/lib/
gcc -v -g -o test test.c
cat /proc/8593/maps
sudo tail -f /var/log/messages
dmesg -w
LD_DEBUG=help ./test
LD_DEBUG=all ./test
gcc -static -g -o test test.c
gcc -g -o test test.c
gcc  -no-pie -g -o test_nopie test.c
 set disable-randomization off
gcc -g -o test test.c
readelf -a test
objdump -Ds test > test.obj
arm-linux-gnueabihf-gcc -g -O0 -o test test.c
arm-linux-gnueabihf-readelf -a test
gcc -O2 -fprofile-generate=test -o sort_unopt sort.c
gcc -O2 -fprofile-use=test -o sort_opt sort.c
size test
strings test
ldd test
ldd -v test
man syscall
gcc -g -O0 -o test test.c
objdump -DS test > test.obj
objdump -f test
objcopy -j .interp test test_new
readelf -a test_new
clang -emit-llvm -S test.c -o test.ll
lli ./test.ll
clang -x ir test.ll -o test
