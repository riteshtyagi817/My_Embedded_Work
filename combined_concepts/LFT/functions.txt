#!/bin/sh

test_fun1(){
    var=FUN_VAR
    shift
    echo "   PARS after fun shift:   $0 $1 $2 $3 $4 $5"
}

var=MAIN_VAR
echo ’ ’
echo "BEFORE FUN MAIN, VAR=$var"
echo "   PARS starting in main:  $0 $1 $2 $3 $4 $5"
     
test_fun1 "$@"
echo "   PARS after fun in main: $0 $1 $2 $3 $4 $5"
echo "AFTER FUN MAIN, VAR=$var"

exit 0

Sometimes you will see an (older) method of declaring functions, which explicitly includes a function keyword, as in:
function fun_foobar(){
   statements
}
function fun_foobar{
   statements
}
without the parentheses.

This syntax will work fine in bash scripts, but is not designed for the original Bourne shell, sh.

In the case where a function name is used which collides with an alias, this method will still work.

In most cases, use of the function keyword is not often used in new scripts.
