Now, we will discuss some additional text utilities that you can use for performing various actions on your Linux files, such as changing the case of letters or determining the count of words, lines, and characters in a file.
The tr utility is used to translate specified characters into other characters or to delete them. The general syntax is as follows:
$ tr [options] set1 [set2]
The items in the square brackets are optional. tr requires at least one argument and accepts a maximum of two. The first designated set1 in the example lists the characters in the text to be replaced or removed. The second, set2, lists the characters that are to be substituted for the characters listed in the first argument. Sometimes, these sets need to be surrounded by apostrophes (or single-quotes (')) in order to have the shell ignore that they mean something special to the shell. It is usually safe (and may be required) to use the single-quotes around each of the sets, as you will see in the examples below.

For example, suppose you have a file named city containing several lines of text in mixed case. To translate all lower case characters to upper case, at the command prompt type cat city | tr a-z A-Z and press the Enter key.

Command

Usage

$ tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ

Convert lower case to upper case

$ tr '{}' '()' < inputfile > outputfile

Translate braces into parenthesis

$ echo "This is for testing" | tr [:space:] '\t'

Translate white-space to tabs

$ echo "This   is   for    testing" | tr -s [:space:]

Squeeze repetition of characters using -s

$ echo "the geek stuff" | tr -d 't'

Delete specified characters using -d option

$ echo "my username is 432234" | tr -cd [:digit:]

Complement the sets using -c option

$ tr -cd [:print:] < file.txt

Remove all non-printable characters from a file

$ tr -s '\n' ' ' < file.txt

Join all the lines in a file into a single line
